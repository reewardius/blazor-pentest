import sys
import requests
from urllib.parse import urljoin

def extract_urls_from_json(json_data, base_url):
    assembly_resources = json_data.get("resources", {}).get("assembly", {})
    return [urljoin(base_url, assembly_file) for assembly_file, _ in assembly_resources.items()]

def load_urls_from_file(file_path):
    with open(file_path, 'r') as file:
        return [line.strip() for line in file if line.strip()]

def add_path_if_missing(url, path):
    return urljoin(url, path) if not url.endswith(path) else url

def main(urls, output_file=None):
    if output_file:
        with open(output_file, 'a') as out_file:
            for json_url in urls:
                json_url = add_path_if_missing(json_url, '_framework/blazor.boot.json')

                response = requests.get(json_url)

                if response.status_code == 200:
                    data = response.json()
                    urls = extract_urls_from_json(data, json_url)
                    out_file.write('\n'.join(urls) + '\n')
                else:
                    print(f"Не удалось загрузить JSON. Код ответа: {response.status_code}")
    else:
        for json_url in urls:
            json_url = add_path_if_missing(json_url, '_framework/blazor.boot.json')

            response = requests.get(json_url)

            if response.status_code == 200:
                data = response.json()
                urls = extract_urls_from_json(data, json_url)
                print('\n'.join(urls))
            else:
                print(f"Не удалось загрузить JSON. Код ответа: {response.status_code}")

if __name__ == "__main__":
    urls = []
    output_file = None

    for i, arg in enumerate(sys.argv[1:]):
        if arg == '-u':
            urls.append(sys.argv[i + 2])
        elif arg == '-l':
            urls.extend(load_urls_from_file(sys.argv[i + 2]))
        elif arg == '-o':
            output_file = sys.argv[i + 2]

    if not urls:
        print("Не указаны URL. Используйте флаги -u или -l для задания списка сайтов.")
        sys.exit(1)

    main(urls, output_file)
