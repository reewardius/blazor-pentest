@page "/ping"

<h3>Пинг удаленного сервера</h3>

<p>Введите адрес для пинга:</p>
<input @bind="serverAddress" />
<button @onclick="async () => await PingServer()">Пинговать</button>

@if (pingResult != null)
{
    <p>Результат пинга: @pingResult</p>
}

@code {
    private string serverAddress = "example.com";
    private string pingResult;

    [Inject]
    private HttpClient HttpClient { get; set; }

    private async Task PingServer()
    {
        try
        {
            if (string.IsNullOrWhiteSpace(serverAddress))
            {
                pingResult = "Введите корректный адрес для пинга.";
                return;
            }

            Uri uriResult;
            if (!Uri.TryCreate(serverAddress, UriKind.Absolute, out uriResult))
            {
                pingResult = "Введите корректный адрес URL.";
                return;
            }

            var response = await HttpClient.GetAsync($"https://{uriResult.Host}");

            if (response.IsSuccessStatusCode)
            {
                pingResult = "Успешный пинг!";
            }
            else
            {
                pingResult = $"Ошибка при выполнении пинга: {response.ReasonPhrase}";
            }

            StateHasChanged(); // Обновление интерфейса
        }
        catch (Exception ex)
        {
            pingResult = $"Ошибка: {ex.Message}";
        }
    }
}
